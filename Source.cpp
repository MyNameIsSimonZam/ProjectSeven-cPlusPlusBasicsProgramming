#include <iostream>
#include <string>


/* Задача 1. Кукушка(цикл for).
Перепишите программу из прошлого модуля, используя цикл for. Напишите программу,
которая имитировала бы часы с кукушкой. В начале работы она спрашивает, который час,
а затем нужное количество раз пишет “Ку - ку!”.
Обеспечьте контроль ввода (например, количество часов не может быть отрицательным).
*/

void task11() {

	int hour = 0;
	std::cout << "What time is it? (in 12-hour format) ";
	std::cin >> hour;
	if (hour < 1 || hour > 12) std::cout << "Yor number is not 12-hour format\n";
	else {
		for (int i = 0; i < hour; ++i) {
			std::cout << "Ку - ку!\n";
		}
	}
}

/* Задача 2. Сумма чисел(цикл for).
Перепишите программу из прошлого модуля, используя цикл for.
У бухгалтера сломались счеты.Напишите программу, которая считала бы сумму вводимых чисел.
В начале у бухгалтера спрашивают, сколько чисел тот хочет сложить,
затем нужное количество раз просят ввести число и в конце выводят получившуюся сумму.
*/

void task12()
{
	int number = 0;
	int count = 0;
	int res = 0;
	std::cout << "How many times do you whant to add numbers? ";
	std::cin >> count;
	for (int i = 0; i < count; ++i)
	{
		std::cout << "Enter the number: ";
		std::cin >> number;
		res += number;
	}
	std::cout << "Your result is: " << res << "\n";
}

/*Задача 3. Таблица умножения.
Первоклассник Вася родился в век высоких технологий и не умеет умножать в уме.
Он боится контрольной работы на знание таблицы умножения,
поэтому он решил написать на С++ программу - шпаргалку.
Вася хочет ввести число, а программа должна выдать таблицу умножения для этого числа.
Помогите Васе написать программу.
  */

void task13() {

	int number;
	std::cout << "Enter the number ";
	std::cin >> number;
	for (int i = 1, res; i <= 10; ++i) {
		res = number * i;
		std::cout << number << " * " << i << " = " << res << "\n";
	}
}

/* Задача 4. Сумма нечётных.
Напишите программу, похожую на разобранный нами пример с суммой чисел, но только теперь
нужно вычислить сумму всех нечётных чисел, лежащих в диапазоне от единицы до указанного
пользователем числа включительно.
*/

void task14()
{
	int number;
	std::cout << "Enter the number ";
	std::cin >> number;
	int res = 0;
	for (int i = 1; i <= number; i += 2) {
		res += i;
	}
	std::cout << "The amount is: " << res << "\n";
}

/*Задача 5. Начальник(цикл for).
Перепишите программу из прошлого модуля, используя цикл for.
Напишите программу для робота - начальника.Он спрашивает у пользователя,
выполнил ли он задание, которое тот выдавал вчера, и продолжает это делать до тех пор,
пока пользователь не ответит ему “Да, конечно, сделал”.
Для большей реалистичности в конце пусть робот - начальник пожалуется :
“Ну почему тебя нужно спрашивать N раз ? ”, где N — это число попыток, которые были
потрачены пользователем, прежде чем он ввёл правильный ответ.
"Yes of course!"
*/

void task15()
{
	std::string answer;
	std::cin.ignore();
	int i = 0;
	for (; answer != "y"; ++i)
	{
		std::cout << "Did you make the task? ";
		std::getline(std::cin, answer);
	}
		std::cout << "Ну почему тебя нужно спрашивать " << i << " раз? ";
}

